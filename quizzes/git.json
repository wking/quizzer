{
	"version": "0.1",
	"questions": [
		{
			"class": "ScriptQuestion",
			"intepreter": "sh",
			"id": "git help config",
			"prompt": "Get help for Git's `config` command",
			"answer": "git help config",
			"help": "http://www.kernel.org/pub/software/scm/git/docs/git-help.html",
			"tags": [
				"help"
				]
		},
		{
			"class": "ScriptQuestion",
			"interpreter": "sh",
			"id": "git config --global user.name",
			"prompt": "Configure your user-wide name to be `A U Thor`.",
			"answer": "git config --global user.name 'A U Thor'",
			"setup": [
					"export HOME=."
					],
			"teardown": [
				"cat .gitconfig"
				],
			"help": "http://www.kernel.org/pub/software/scm/git/docs/git-config.html",
			"tags": [
				"config"
				]
		},
		{
			"class": "ScriptQuestion",
			"interpreter": "sh",
			"id": "git config --global user.email",
			"prompt": "Configure your user-wide email to be `author@example.com`.",
			"answer": "git config --global user.email 'author@example.com'",
			"setup": [
					"export HOME=."
					],
			"teardown": [
				"cat .gitconfig"
				],
			"help": "http://www.kernel.org/pub/software/scm/git/docs/git-config.html",
			"tags": [
				"config"
				]
		},
		{
			"class": "ScriptQuestion",
			"interpreter": "sh",
			"id": "git init",
			"prompt": "Initialize a Git repository in a new `my-project` directory.",
			"multiline": true,
			"answer": [
					"mkdir my-project",
					"cd my-project",
					"git init"
					],
			"teardown": [
				"git status"
				],
			"help": "http://www.kernel.org/pub/software/scm/git/docs/git-init.html",
			"tags": [
				"init"
				]
		},
		{
			"class": "ScriptQuestion",
			"interpreter": "sh",
			"id": "git clone",
			"prompt": "Clone git://github.com/wking/quizzer.git into a new `quizzer` directory.",
			"answer": "git clone git://github.com/wking/quizzer.git",
			"teardown": [
				"cd quizzer",
				"git status"
				],
			"help": "http://www.kernel.org/pub/software/scm/git/docs/git-clone.html",
			"tags": [
				"init"
				]
		},
		{
			"class": "ScriptQuestion",
			"interpreter": "sh",
			"id": "git add / commit",
			"prompt": [
				"There is a new README file in your repository.",
				"Make a new commit including this README.",
				"The commit message should be `Add a README`."
				],
			"multiline": true,
			"timeout": null,
			"answer": [
				"git add README",
				"git commit -m \"Add a README\""
				],
			"setup": [
				"export GIT_AUTHOR_NAME='A U Thor'",
				"export GIT_AUTHOR_EMAIL=author@example.com",
				"export GIT_COMMITTER_NAME='C O Mitter'",
				"export GIT_COMMITTER_EMAIL=committer@example.com",
				"export GIT_AUTHOR_DATE=1970-01-01T00:00:00Z",
				"export GIT_COMMITTER_DATE=\"$GIT_AUTHOR_DATE\"",
				"git init",
				"echo 'This project is wonderful' > README"
				],
			"teardown": [
				"git ls-files",
				"git status"
				],
			"help": [
				"http://www.kernel.org/pub/software/scm/git/docs/git-add.html",
				"http://www.kernel.org/pub/software/scm/git/docs/git-commit.html"
				],
			"tags": [
				"add",
				"commit"
				]
		},
		{
			"class": "ScriptQuestion",
			"interpreter": "sh",
			"id": "git checkout HEAD -- FILE",
			"prompt": [
				"You've messed up your README file.",
				"Restore it to the last committed version."
				],
			"answer": "git checkout HEAD -- README",
			"setup": [
				"export GIT_AUTHOR_NAME='A U Thor'",
				"export GIT_AUTHOR_EMAIL=author@example.com",
				"export GIT_COMMITTER_NAME='C O Mitter'",
				"export GIT_COMMITTER_EMAIL=committer@example.com",
				"export GIT_AUTHOR_DATE=1970-01-01T00:00:00Z",
				"export GIT_COMMITTER_DATE=\"$GIT_AUTHOR_DATE\"",
				"git init",
				"echo 'This project is wonderful' > README",
				"git add README",
				"git commit -am 'Add a README'",
				"echo 'This project is terrible' > README"
				],
			"teardown": [
				"git status",
				"cat README"
				],
			"help": "http://www.kernel.org/pub/software/scm/git/docs/git-checkout.html",
			"tags": [
				"checkout"
				]
		},
		{
			"class": "ScriptQuestion",
			"interpreter": "sh",
			"id": "git commit --amend",
			"prompt": [
				"You messed up your README file in your last commit.",
				"You just fixed the contents of `README`, but haven't added it to the index.",
				"Commit the new version so it also fixes the last commit.",
				"The fixed commit message should be `Add a README`."
				],
			"multiline": true,
			"timeout": null,
			"answer": [
				"git commit --amend -am 'Add a README'"
				],
			"setup": [
				"export GIT_AUTHOR_NAME='A U Thor'",
				"export GIT_AUTHOR_EMAIL=author@example.com",
				"export GIT_COMMITTER_NAME='C O Mitter'",
				"export GIT_COMMITTER_EMAIL=committer@example.com",
				"export GIT_AUTHOR_DATE=1970-01-01T00:00:00Z",
				"export GIT_COMMITTER_DATE=\"$GIT_AUTHOR_DATE\"",
				"git init",
				"echo 'This project is terrible' > README",
				"git add README",
				"git commit -am 'Add a README'",
				"export GIT_AUTHOR_DATE=1970-01-01T00:01:00Z",
				"export GIT_COMMITTER_DATE=\"$GIT_AUTHOR_DATE\"",
				"echo 'This project is wonderful' > README"
				],
			"teardown": [
				"git log -p",
				"git status"
				],
			"help": "http://www.kernel.org/pub/software/scm/git/docs/git-commit.html",
			"tags": [
				"commit",
				"rewrite"
				]
		}
	]
}
